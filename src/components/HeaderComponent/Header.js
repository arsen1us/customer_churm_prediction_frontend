import React, { useState, useEffect, useRef, useContext} from "react";
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import { jwtDecode } from "jwt-decode";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { HubConnectionBuilder, LogLevel } from "@microsoft/signalr";

import Popup from "../PopupComponent/Popup";
import NotificationList from "../ListComponents/NotificationList";

import "./Header.css"

import {AuthContext} from "../../AuthProvider"

const Header = () => {
    
  const {user, ownedCompany} = useContext(AuthContext);

    const [notificationsCount, setNotificationsCount] = useState(5);
    const [isPopupOpen, setIsPopupOpen] = useState(false);
    const openPopup = () => setIsPopupOpen(true);
    const closePopup = () => setIsPopupOpen(false);

    return(
        <div>
            <nav className="header-nav">
              {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å */}
              <ul className="nav-links nav-links-left">

                <li>
                  <Link to="/">–ì–ª–∞–≤–Ω–∞—è</Link>
                </li>

                <li>
                  <Link to="/category">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</Link>
                </li>

                <li>
                  <Link to="/churn-prediction">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</Link>
                </li>
              </ul>

              {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å */}
              <ul className="nav-links nav-links-right">

                <li>
                    {ownedCompany ? (
                      <Link to="/company">–ú–æ—è –∫–æ–º–ø–∞–Ω–∏—è</Link>
                    ):(
                      <Link to="/company">–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏</Link>
                    )}
                </li>

                <li>
              
                <div style={{ position: "relative", display: "inline-block" }}>
                    <button 
                        onClick={openPopup} 
                        style={{
                            background: "none", // –£–±–∏—Ä–∞–µ–º —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
                            border: "none", // –£–±–∏—Ä–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—É
                            padding: 0, // –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã
                            cursor: "pointer", // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
                        }}
                    >
                        <img 
                            src="https://localhost:7299/icons/notification.png" 
                            alt="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" 
                            style={{ width: "24px", height: "24px" }} 
                        />
                    </button>
                    {notificationsCount > 0 && (
                        <span
                            style={{
                                position: "absolute",
                                top: "-5px",
                                right: "-10px", 
                                backgroundColor: "red",
                                color: "white", 
                                borderRadius: "50%", 
                                padding: "4px 8px", 
                                fontSize: "12px", 
                                fontWeight: "bold", 
                                minWidth: "20px", 
                                textAlign: "center", 
                                zIndex: 1, 
                            }}
                        >
                            {notificationsCount}
                        </span>
                    )}
                </div>
                  
                {isPopupOpen && (
                    <Popup isOpen={isPopupOpen} onClose={closePopup} title="–°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π">
                        <div>
                            <NotificationList />
                        </div>
                    </Popup>
                )}

              
                </li>
                <li>
                  <Link to="/cart">
                    <img src="https://localhost:7299/icons/cart.png" alt="–ö–æ—Ä–∑–∏–Ω–∞" />
                  </Link>
                </li>
                {user?.id ? (
                  <li className="profile-link">
                    <Link to="/profile">
                      {user && user.imageSrcs ? (
                        <img
                          src={`https://localhost:7299/uploads/${user.imageSrcs[0]}`}
                          alt="User Avatar"
                          className="profile-avatar"
                        />
                      ) : (
                        <span className="default-avatar">üë§</span>
                      )}
                      <span className="user-name">
                        {user?.firstName} {user?.lastName}
                      </span>
                    </Link>
                  </li>
                ) : (
                  <>
                    <li>
                      <Link to="/reg">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Link>
                    </li>
                    <li>
                      <Link to="/auth">–í—Ö–æ–¥</Link>
                    </li>
                  </>
                )}
              </ul>
            </nav>
        </div>
    );
};

export default Header;