import React, {useEffect, useState, useContext} from "react";
import { jwtDecode } from "jwt-decode";
import axios from "axios";
import OrderItem from "../ListItemComponents/OrderItem";
import { Link } from "react-router-dom";
import {AuthContext} from "../../AuthProvider"
import "./Profile.css"

const Profile = () => {

    const [orderList, setOrderList] = useState([]);
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    const {user, token, refreshToken, logout} = useContext(AuthContext);

    // –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å fetch –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∞–º—ã—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
    /// summary
    /// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    /// summary
    const GetOrderListByUserIdAsync = async () => {
        try{
            const response = await axios.get(`https://localhost:7299/api/order/user/${user.id}`, {
                headers: {
                    "Authorization": "Bearer " + token
                }
            });
            if(response && response.status === 200){
                if(response.data.orderList){
                    setOrderList(response.data.orderList);
                }
            }
        }
        catch (error){

            if(error.response){
                const status = error.response.status;

                switch(status) {
                    case 401:
                        await refreshToken();
                        break;
                    case 403:
                        alert("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ—Å—É—Ä—Å—É!")
                        break;
                    case 404:
                        alert("–û—à–∏–±–∫–∞ 404. –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω (–ù–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ)!")
                        break;
                    case 405:
                        alert("–û—à–∏–±–∫–∞ 405. Method Not Allowed (–ù–µ –º–æ–≥—É –ø–æ–∫–∞ —ç—Ç–æ –ø–æ—á–∏–Ω–∏—Ç—å)!")
                        break;
                    case 500:
                        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞!")
                        break;
                    default:
                        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
                }
            }
            else {
                alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ!");
            }
        }
    }

    useEffect(() => {
        GetOrderListByUserIdAsync();
    }, [])

    return (
        <div>
            <div className="profile-container">
              {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
              <div className="profile-info">
                {user ? (
                  <>
                    {/* –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                    <div className="avatar-container">
                      {user.imageSrcs.length > 0 ? (
                        <img
                          src={`https://localhost:7299/uploads/${user.imageSrcs[0]}`}
                          alt="User Avatar"
                          className="avatar-img"
                        />
                      ) : (
                        <span className="default-avatar">üë§</span>
                      )}
                    </div>
                  
                    {/* –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                    <h4>{user.firstName} {user.lastName}</h4>
                  
                    {/* –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
                    <div>
                      <Link to="/edit-profile" className="edit-link">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Link>
                    </div>
                  
                    {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
                    <div>
                      <button onClick={logout} className="logout-button">–í—ã–π—Ç–∏</button>
                    </div>
                  </>
                ) : (
                  <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</p>
                )}
              </div>
            
              {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å: –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ */}
              <div className="order-list">
                <h4>–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤</h4>
                <ul>
                  {orderList.length > 0 ? (
                    orderList.map((order, index) => (
                      <OrderItem key={index} order={order} />
                    ))
                  ) : (
                    <p>–ó–∞–∫–∞–∑—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
                  )}
                </ul>
              </div>
            </div>

        </div>
    );
}

export default Profile;

